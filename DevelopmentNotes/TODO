- Implement support for serialization for all primitive data types,
  Serializable, and pseudo-Serializable classes.

- Review the design of AbstractProperty. The class currently probably exposes
  too much of its internal structure and also requires the user to be aware of
  the IndexDescriptor when creating new AbstractProperties using the enum class
  IndexDescriptor::Format..

- Add serialization for Property::GreensFunction.

- Remove variables such as hint and energies from the PropertyExtractors that
  are used to communicate information between the calculateXXX-functions and
  the XXXCallback-functions. Instead pass a hint parameter as argument through
  the calculate() and callback functions. This will allow the same
  PropertyExtractor to be parallelized as long as the solver allows for this.

- Implement operator+=(), operator-=(), operator*=(), operator/=() operator+(),
  operator-(), opeartor*(), and operator/() for all Properties.

- OverlapAmplitudeSet::_Iterator and BasisStateSet::_Iterator does probably not
  need the members iterator and iteratorEnd. The should therefore probably be
  rewritten to remove these.

- No strict policy has been established regarding whether values between a
  lower bound and an upper bound should include or exclude the corresponding
  bounds. Currently it seems that inclusive lower bounds and exclusive upper
  bounds are most common. Making both lower and upper bounds included seems the
  most appropriate. Ensuring a single policy is established will especially
  require going through the PropertyExtractors and making lower and upper
  bounds inclusive and calculating dE as
  dE = (uppwerBound - lowerBound)/(resolution - 1).
  Property::EnergyResolvedProperty already implements the method getEnergy()
  which resiles on this form of dE. Making sure that the whole code relies on
  this standard may therefore largely be a matter of ensuring that this method
  is used whenever possible.
